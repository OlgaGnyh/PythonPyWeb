# Generated by Django 4.2.5 on 2024-04-19 09:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Carriers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_carrier', models.CharField(help_text=' Наименование перевозчика уникальное. Ограничение 100 знаков', max_length=100, unique=True, verbose_name='Наименование перевозчика')),
                ('address', models.TextField(blank=True, help_text='Введите адрес.', null=True, verbose_name='Адрес')),
                ('name_director', models.CharField(help_text='ФИО начальника . Ограничение 50 знаков', max_length=50, unique=True, verbose_name='Начальник')),
                ('phone_number', models.CharField(blank=True, help_text='Формат +79123456789', max_length=12, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+79123456789'.", regex='^\\+79\\d{9}$')])),
                ('email', models.EmailField(help_text='Адрес почты в формате *@*.*', max_length=254, verbose_name='Адрес электронной почты')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeTrans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_trans_shot', models.CharField(help_text='Краткое название вида транспорта, уникальное. Ограничение 5 знаков ', max_length=5, unique=True, verbose_name='Краткое название вида транспорта')),
                ('type_trans', models.CharField(help_text='Вид транспорта, уникальное. Ограничение 50 знаков', max_length=50, unique=True, verbose_name='Вид транспорта')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_vehicle_shot', models.CharField(help_text='Краткое название типа подвижного состава, уникальное. Ограничение 10 знаков', max_length=10, unique=True, verbose_name='Краткое название типа подвижного состава')),
                ('type_vehicle', models.CharField(help_text='Тип подвижного состава, уникальное. Ограничение 50 знаков', max_length=50, unique=True, verbose_name='Тип подвижного состава')),
                ('capacity', models.IntegerField(help_text='Вместимость подвижного состава', verbose_name='Вместимость подвижного состава')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_route', models.CharField(help_text='Номер маршрута', max_length=10, verbose_name='Номер маршрута')),
                ('name_route', models.CharField(help_text=' Название маршрута', max_length=100, verbose_name='Название маршрута')),
                ('type_tariff', models.CharField(blank=True, choices=[('р', 'регулируемый'), ('нр', 'нерегулируемый')], help_text='Выберите тип тарифа', max_length=2, null=True, verbose_name='Тип тарифа')),
                ('length', models.DecimalField(decimal_places=1, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carriers', to='route.carriers')),
                ('type_trans', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trans', to='route.typetrans')),
                ('type_vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='route.typevehicle')),
            ],
        ),
    ]
